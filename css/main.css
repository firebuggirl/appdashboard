/*! normalize.css v3.0.1 | MIT License | git.io/normalize */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11 and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
nav,
section,
summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background: transparent; }

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  -moz-box-sizing: content-box;
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  -moz-box-sizing: content-box;
  -webkit-box-sizing: content-box;
  /* 2 */
  box-sizing: content-box; }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

/* import extends and mixins */
/*
 To later include font-face mixin:

 @include font-face('abolition-regular', abolition-regular);

*/
/*
 To later include text mixin:

 @include text(1em, 1.5, $color:$color-text-base); Note: because of "NULL" can skip over values

*/
/* To include, create .btn selector in _bass.scss .btn{@include bg-colors($ui-colors);}  */
/* Top down grey to white color gradient */
/* left to right grey to white color gradient */
/* Video control styles */
/* To include in styles: ex: padding: em(48px) 0; font-size: em(42px);  */
/*To call palette function in style rule:
  h1{
  color: palette(grey, x-dark);
} */
/* import variables */
/* To use these as color values in our style rules,
use map-get function.
Ex:
h1{
color: map-get(map-get($palettes, grey), x-dark);
}

But, too long so
create @function pallette in _functions.scss to do the work */
/*To call palette function in style rule:
  h1{
  color: palette(grey, x-dark);
} */
/*Create a Sass map to give base colors a theme name..comes in handy later when
creating class names for ui elements like buttons, etc.. Then create an
each directive (in mixins partial) to dynamically create a class name for each key in our map below*/
/* Classes created:
.btn--default
.btn--success
.btn--error
.btn--warning
.btn--info
*/
/* Global Layout Set-up */
* {
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  box-sizing: border-box; }

img {
  max-width: 100%; }

body {
  margin: 0;
  padding: 0;
  background-color: #fff; }

.nav {
  display: flex;
  -moz-display: flex;
  flex-direction: column;
  -webkit-flex-direction: column;
  /*@include flex_align_items--center;*/
  list-style-type: none;
  position: fixed;
  margin: -5.625em auto;
  padding: 0;
  width: 100%;
  z-index: 10;
  background-color: #453b94;
  padding-top: 11.25em; }
  @media (min-width: 768px) {
    .nav {
      /*margin: 0 auto;*/
      padding-top: 6.25em;
      width: 7%;
      height: 200vh; } }
  @media (min-width: 1024px) {
    .nav {
      padding-top: 12.5em; } }

ul {
  /*border-bottom: 1px solid #ccc;*/
  list-style: none;
  margin: 0 0 1.5rem 0;
  padding: 0px; }

.nav li {
  padding: 3px 10px 10px 5px; }
  @media (min-width: 768px) {
    .nav li {
      padding-top: 1.25em;
      font-size: 24px; } }

li {
  border-bottom: 3px solid #fff;
  border-bottom-style: inset;
  margin-bottom: 0em;
  background-image: linear-gradient(to bottom, transparent 50%, #5f4aad 25%, #86a3cc 95%, #a9bad3 95%);
  background-size: 100% 200%;
  background-position: top center;
  /*color: #666;*/
  /*display: block;
  text-align: center;
  text-decoration: none;*/
  transition: all .25s ease-in-out; }
  li:hover {
    background-position: bottom center;
    color: rgba(0, 0, 0, 0.75); }
  @media (min-width: 768px) {
    li {
      border-bottom: none; } }

.navIcons {
  height: 2.5em; }

.sideNavIcons {
  height: 1.875em;
  margin-bottom: 0.625em;
  opacity: 0.7; }
  .sideNavIcons:hover {
    opacity: 1; }

@media (min-width: 1024px) {
  #emptyDiv {
    content: " ";
    height: 9.375em;
    width: 93%; } }
@media (min-width: 1280px) {
  #emptyDiv {
    /*height: em(380px);*/ } }

#wrapper {
  /*width: 100%;*/
  height: 100vh; }
  @media (min-width: 768px) {
    #wrapper {
      /* width:93%;
        margin-left: 7%;*/ } }

section {
  display: flex;
  -moz-display: flex;
  flex-direction: column;
  -webkit-flex-direction: column; }
  @media (min-width: 768px) {
    section {
      width: 93%;
      margin-left: 7%;
      margin-top: 6.25em; } }
  @media (min-width: 1024px) {
    section {
      margin-top: 0em; } }

/* #toggle_class keeps margin between nav and section flush
   when nav is toggled on and off with sticky header nav */
#toggle_class {
  content: "";
  height: 0px;
  display: none; }

/* Link Styles */
a {
  text-decoration: none;
  color: #fbe3ab; }
  a:hover {
    color: #f87777; }
  a:focus {
    color: #cc0a0a; }

/* Section Styles */
p {
  color: #fff; }

.name {
  font-weight: 300; }

.flexDashBoard {
  text-align: center; }
  @media (min-width: 768px) {
    .flexDashBoard {
      display: flex;
      -moz-display: flex;
      justify-content: space-around;
      -webkit-justify-content: space-around;
      align-items: center;
      -moz-align-items: center;
      /*text-align: left;*/
      margin-bottom: 1.875em; } }

.flexAlert {
  width: 98%;
  height: 3.75em;
  margin-left: 1%; }
  @media (min-width: 768px) {
    .flexAlert {
      /*  @include flex;*/ } }
  @media (min-width: 1024px) {
    .flexAlert {
      /*height: 100vh;*/
      /*width: 98%;*/
      /*padding-top: 6.25em;*/
      /*margin-left: 1%;*/ } }

#alert {
  display: flex;
  -moz-display: flex;
  /*width: 96%;*/
  background-color: #796FC6;
  height: 2.5em;
  display: none;
  /*margin-left: 1%;*/
  padding-top: 0.8125em; }
  @media (min-width: 768px) {
    #alert {
      /*  width: 98%;*/ } }

#alertSpan {
  font-weight: 700;
  margin-right: 0.625em;
  margin-left: 0.3125em;
  /*padding-right: em(10px);
  padding-left: em(10px);*/ }

#close {
  margin-left: 1.25em; }
  @media (min-width: 768px) {
    #close {
      margin-left: 25em; } }
  @media (min-width: 1280px) {
    #close {
      margin-left: 53.75em; } }

h3 {
  color: #000;
  opacity: 0.7; }
  h3:hover {
    opacity: 1; }

input[type="search"] {
  border: 0.1875em solid grey;
  width: 60%;
  height: 2.5em inherit;
  margin-top: 1.25em;
  margin-bottom: 2.5em;
  border-radius: 4%;
  font-size: 16pt;
  color: #231e4b; }
  @media (min-width: 768px) {
    input[type="search"] {
      /*width: 40%;*/
      margin-top: 0em;
      margin-bottom: 0em;
      height: 1.25em; } }

input[type="search"]:focus {
  border: 8px solid #796FC6;
  color: #090303;
  /*border-color: #c6454e;*/
  background-color: #C0C0C0; }

#weekly {
  padding-top: 1.25em;
  text-align: center; }

#trafficTime {
  display: flex;
  -moz-display: flex;
  justify-content: space-between;
  -webkit-justify-content: space-between;
  padding-bottom: 1.25em; }

.trafficTimeHover:hover {
  color: #fff;
  background-color: #3C943C;
  border-radius: 30%; }

button {
  border-radius: 40%;
  height: 2.5em;
  background-color: transparent;
  border: none; }
  button:hover {
    background-color: #3C943C;
    color: #fff; }

#chart {
  margin-top: 6.25em; }

@media (min-width: 768px) {
  #traffic {
    margin-bottom: 5em; } }

.trafficTitlesMobileView {
  display: none;
  text-align: center; }

.trafficTitlesTabletView {
  display: none; }
  @media (min-width: 768px) {
    .trafficTitlesTabletView {
      display: flex;
      -moz-display: flex;
      /*@include flex_column;*/
      justify-content: space-around;
      -webkit-justify-content: space-around;
      margin-top: -3.75em; } }

#dailyTraffic {
  display: flex;
  -moz-display: flex;
  flex-direction: column;
  -webkit-flex-direction: column;
  justify-content: space-between;
  -webkit-justify-content: space-between;
  /*height: em(500px);*/ }
  @media (min-width: 768px) {
    #dailyTraffic {
      flex-direction: row;
      -webkit-flex-direction: row;
      justify-content: space-between;
      -webkit-justify-content: space-between;
      margin-top: 1.875em;
      height: 15.625em; } }

@media (min-width: 768px) {
  #barChartDaily, #mobileUsers {
    max-width: 50%; } }

#socialStatH3Div {
  text-align: center; }
  @media (min-width: 1024px) {
    #socialStatH3Div {
      margin-top: 16em;
      padding-left: 0.625em;
      text-align: left; } }

.socialStats {
  display: flex;
  -moz-display: flex;
  flex-direction: column;
  -webkit-flex-direction: column;
  justify-content: center;
  -webkit-justify-content: center;
  align-items: center;
  -moz-align-items: center;
  text-align: center;
  /*width:98%;*/
  margin-top: 5%; }
  @media (min-width: 768px) {
    .socialStats {
      flex-direction: row;
      -webkit-flex-direction: row;
      justify-content: space-between;
      -webkit-justify-content: space-between;
      /*  margin-top: 2em;*/
      /*width: 93%;*/ } }

.innerFlexWrap {
  display: flex;
  -moz-display: flex;
  justify-content: center;
  -webkit-justify-content: center;
  align-items: center;
  -moz-align-items: center;
  background-color: #F8FBF5;
  /*opacity: 0.8;*/
  /*@include flex_justify_space_around;*/
  border: 4px solid #878787;
  /*flex-basis: 75%;*/
  width: 90%;
  height: 150px;
  margin-bottom: 3.125em; }
  .innerFlexWrap:hover {
    /*  opacity: 1;*/ }
  @media (min-width: 768px) {
    .innerFlexWrap {
      width: 16.875em; } }
  @media (min-width: 1024px) {
    .innerFlexWrap {
      width: 23.125em; } }

.socialIconDivs {
  display: flex;
  -moz-display: flex;
  justify-content: center;
  -webkit-justify-content: center;
  align-items: center;
  -moz-align-items: center;
  border: 0.25em solid #878787;
  width: 5.625em;
  height: 5.625em;
  background-color: #796FC6;
  border-radius: 50%; }
  @media (min-width: 1024px) {
    .socialIconDivs {
      height: 7.5em;
      width: 7.5em;
      margin-right: 2.5em; } }

#twitter, #facebook, #google, #linkedIn, #pinterest, #youtube {
  height: 3.4375em;
  fill: #fff; }
  @media (min-width: 1024px) {
    #twitter, #facebook, #google, #linkedIn, #pinterest, #youtube {
      height: 4.375em; } }

h4 {
  color: #796FC6;
  font-size: 32px;
  margin-bottom: -0.625em; }
  @media (min-width: 1024px) {
    h4 {
      margin-left: -1.5625em;
      margin-bottom: -1.875em; } }

.socialNumbers {
  font-size: 36px; }
  @media (min-width: 1024px) {
    .socialNumbers {
      font-size: 63px; } }

/*.socialText{
  margin-top: em(-40px);
  margin-left: em(-220px);
}*/
/*.socialWrappers{
  @include flex;

  @include flex_align_items--center;
  @include flex_justify_space_around;
  flex-direction:row-reverse;
  border: 4px solid $grey;
  width: 90%;
  height: em(250px);
}*/
#toggle {
  left: 0;
  top: 0;
  position: absolute;
  height: 48px;
  width: 48px;
  margin-top: 0.625em; }

#cornerNavIcon {
  margin-right: 1.5em; }

/* Wrapped  picToggle image in a link tag for accessibility and for increased functionality, then hid anchor text to get rid of accessibility warning on Chrome accessibility audit*/
#navTextIndent {
  margin-left: -624.9375em; }

h1 {
  color: #fff; }

.navText {
  color: #fff;
  opacity: 0.7;
  margin-left: 70px;
  margin-top: -1.625em; }
  .navText:hover {
    opacity: 1; }
  @media (min-width: 768px) {
    .navText {
      text-indent: -624.9375em; } }

header {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  min-height: 30px;
  width: 100%;
  z-index: 10;
  padding: 10px;
  display: flex;
  -moz-display: flex;
  flex-direction: row;
  -webkit-flex-direction: row;
  /*@include flex_justify_center;*/
  min-height: 50px;
  width: 100%;
  z-index: 12;
  background-color: #796FC6; }

#headerH1 {
  font-size: 22px;
  font-weight: 300;
  margin-left: 1.875em;
  margin-top: -0.3125em;
  /*margin-right: em(10px);*/ }
  @media (min-width: 768px) {
    #headerH1 {
      margin-left: -0.9375em; } }

#headerH1Span {
  font-weight: 700; }

#headerNav {
  margin-left: auto; }
  @media (min-width: 768px) {
    #headerNav {
      display: flex;
      -moz-display: flex;
      margin-left: auto; } }

/*#bell{
  margin-left: em(20px);
  @include bp(tablet){

  padding-right: em(20px);
  }
}*/
#dot {
  height: 8px;
  width: 8px;
  margin-bottom: 1.875em; }

#line {
  height: 8px; }

#profileImg {
  border-radius: 50%;
  height: 2.5em;
  width: 2.5em;
  /*margin-left: em(20px);*/ }

/*@import "footer";*/
/* --------------------------
Keyframes
--------------------------- */
@keyframes slide {
  50% {
    transform: translate3d(0, -10px, 0); }
  80% {
    transform: translate3d(0, 10px, 0); }
  100% {
    transform: translate3d(0, 0, 0); } }
@keyframes grow {
  0% {
    transform: scale(0); }
  30% {
    transform: scale(1.1); }
  60% {
    transform: scale(0.9); } }
@keyframes turn {
  0% {
    transform: rotate(0) scale(0);
    opacity: 0; }
  60% {
    transform: rotate(375deg) scale(1.1); }
  80% {
    transform: rotate(355deg) scale(0.9);
    /*Scale & rotate backwards for bounce effect*/ }
  100% {
    transform: rotate(360deg) scale(1); } }
@keyframes pulse {
  50% {
    transform: scale(1.1); } }
/* Animate the offset in a path's stroke*/
@keyframes offset {
  100% {
    stroke-dashoffset: 0; } }
/* Fill text of #logo-brand on page load after fill set to transparent in html */
@keyframes fill-brand {
  100% {
    fill: #EAAA7F; } }
@keyframes fill-nav {
  100% {
    fill: #39add1; } }
@keyframes fill-hover {
  100% {
    fill: #2D3339; } }
/*@import "media/index";*/

/*# sourceMappingURL=main.css.map */
